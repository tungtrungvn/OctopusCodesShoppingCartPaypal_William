@using OctopusCodesShoppingCartPaypal.Core.Models.MessageModels
@using OctopusCodesShoppingCartPaypal.Core.Models.Orders
@using OctopusCodesShoppingCartPaypal.Core.Provider
@using OctopusCodesShoppingCartPaypal.Core.Resources
@{
    //GET : BaseSetting
    //Id          Value               Type
    //-------------------------------------------
    //LogoImage   /Content/logo.png   BaseSetting
    //PageNumbers 9                   BaseSetting
    var settings = new Dictionary<string, string>();
    if (ViewBag.BaseSetting != null)
    {
        settings = (Dictionary<string, string>)ViewBag.BaseSetting;
    }

    //GET : Session cart
    var cartObj = Session[Constants.CookieCart];

    //SET : quantity = 0
    //GET : Session cart and cast it to CartViewModel
    var quantity = 0;
    try
    {
        var cart = (CartViewModel)cartObj;
        //IF cart = null or cart.Items = null then qty = 0 otherwise qty = cart.Items.Count
        quantity = cart == null || cart.Items == null ? 0 : cart.Items.Count; 
    }
    catch (Exception ex)
    {
    }

 }

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    @*FAVICON*@
    <link rel="icon" href="@Url.Content("~/Content/")/favicon.ico" />
    @*TITLE*@
    <title>@ViewBag.Title @(settings != null && settings.ContainsKey(Constants.SettingWebsiteName) ? "- " + settings[Constants.SettingWebsiteName] : "- My ASP.NET Application")</title>
    @*CSS in BundleConfig.cs*@
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @*CSS excluding in BundleConfig.cs*@
    <link href="~/Content/animate.css" rel="stylesheet" />
    <link href="~/Content/price-range.css" rel="stylesheet" />
    <link href="~/Content/prettyPhoto.css" rel="stylesheet" />
    <link href="~/Content/responsive.css" rel="stylesheet" />
    <link href="~/Content/main.css" rel="stylesheet" />
</head>
<body>

    @*<header> describe a header - www.w3schools.com/tags/tag_header.asp*@
    <header id="header">
        <!--header-->
        <!--/header_top-->

        <div class="header-middle">
            <!--header-middle-->
            <div class="container">
                <div class="row">
                    <div class="col-sm-4">
                        @*pull-left : floats an element to left - www.w3schools.com/bootstrap/bootstrap_ref_css_helpers.asp *@
                        <div class="logo pull-left">
                            @*IF settings contains key "LogoImage" then render img src = value of it (/Content/logo.png)*@
                            @*Id	    Value	            Type
                                =============================================
                                LogoImage	/Content/logo.png	BaseSetting*@
                            @if (settings != null && settings.ContainsKey(Constants.SettingLogo))
                            {
                                <a href="@Url.Action("Index", "Home")"><img alt="" src="@settings[Constants.SettingLogo]"></a>
                            }
                            else
                            {
                                <a href="@Url.Action("Index","Home")"><img alt="" src="/Content/images/sites/logo.png"></a>
                            }
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="shop-menu pull-right">
                            <ul class="nav navbar-nav">
                                @*Show Cart link that links to OrdersController and ActionResult : ViewCart*@
                                <li><a href="@Url.Action("ViewCart","Orders")"><i class="fa fa-shopping-cart"></i> @Resource.Cart<span class="badge" id="cart-quantity">@quantity </span></a></li>
                                @*If Current User Is Authenticated*@
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <li role="presentation" class="dropdown">
                                        <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                                            @*Show User Name*@
                                            @User.Identity.Name <span class="caret"></span>
                                        </a>
                                        <ul class="dropdown-menu">
                                            @*Get Profile, Index, Signout text from Resource*@
                                            <li><a href="@Url.Action("Profile", "User")"><i class="fa fa-user"></i> @Resource.Profile</a></li>
                                            <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-list-alt fa-fw"></i> @Resource.Orders</a></li>
                                            <li role="presentation" class="dropdown">
                                                <a href="@Url.Action("SignOut", "User")"><i class="fa  fa-sign-out"></i>@Resource.LogOut</a>
                                            </li>
                                        </ul>
                                    </li>
                                }
                                else
                                {
                                    @*Get Login text from Resource*@
                                    <li><a href="@Url.Action("Login","Account")"><i class="fa fa-lock"></i> @Resource.Login</a></li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div><!--/header-middle-->


    </header>
    <section id="container-wrapper">
        <div class="container">
            <div class="panel-body " id="notify-wrapper">
                @*LOGIC FOR DISPLAYING RAPID RESPONSE : *@
                @*IF TempData.Keys Contains "Message Error"*@
                @if (TempData.Keys.Contains(Constants.NotifyMessage))
                {
                    @*message = Value of TempData["Message Error"]*@
                    var message = (NotifyModel)TempData[Constants.NotifyMessage];
                    @*IF message.Result not null then show alert-success (green rectangle button). otherwise alert-danger (red rectangle button)*@
                    <div class="alert @(message.Result ? "alert-success" : "alert-danger") alert-dismissable">
                        <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        @*GET : NotifyModel.message value  *@
                        @*
                            Example : CartController (ActionResult : AddItem - HttpPost)
                            Message = string.Format(Resource.AddedToCart),
                        *@
                        <span class="alert-content">@message.Message</span>
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-sm-12">
                    @RenderBody()
                </div>
            </div>
        </div>
    </section>
    <footer id="footer">
        <!--Footer-->
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    @*GET Copyright from resource*@
                    <p class="pull-left"> @Html.Raw(Resource.CopyRight)</p>
                </div>
            </div>
        </div>

    </footer><!--/Footer-->
    <div id="notify-message">
        <div class="alert alert-dismissable" id="alert-wrapper">
            <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <span class="alert-content"></span>
        </div>
    </div>
    <div class="modal fade" id="msgModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="modal-header">Modal Header</h4>
                </div>
                <div class="modal-body" id="modal-body">
                    <p>Some text in the modal.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>
    <div class="modal fade" id="loadding-wrapper">
        <div id="loadding-spinner">
            <i class="fa fa-spinner fa-spin fa-3x fa-fw margin-bottom spinner"></i>
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    @*Scripts in BundleConfig.cs*@
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    @*Scripts excluding in BundleConfig.cs*@
    <script src="~/Scripts/price-range.js"></script>
    <script src="~/Scripts/jquery.scrollUp.min.js"></script>
    <script src="~/Scripts/jquery.prettyPhoto.js"></script>
    <script src="~/Scripts/main.js"></script>
    <script src="~/Scripts/js.cookie.js"></script>
    <script src="~/Scripts/site.js"></script>
    <script src="~/Scripts/common.js"></script>
    <script src="~/Scripts/cart.js"></script>
    @RenderSection("scripts", required: false)
    <a id="scrollUp" href="#top" style="position: fixed; z-index: 2147483647; display: none;"><i class="fa fa-angle-up"></i></a>

</body>
</html>